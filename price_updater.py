import sqlite3
import time
import yfinance as yf
import threading
from datetime import datetime

DB_PATH = "stocks.db"

def get_stock_price(ticker):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ yfinance, —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∏ –∑–∞–¥–µ—Ä–∂–∫–æ–π."""
    attempts = 3  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ —Å–¥–∞—Ç—å—Å—è
    for attempt in range(attempts):
        try:
            stock = yf.Ticker(ticker)
            price = stock.fast_info["last_price"]
            if price:
                return round(price, 2)
            else:
                print(f"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ü–µ–Ω–µ –¥–ª—è {ticker}")
                return None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {ticker}: {e}")
            if "Too Many Requests" in str(e):
                wait_time = (attempt + 1) * 5  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö
                print(f"üîÑ –ü–æ–≤—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ {wait_time} —Å–µ–∫—É–Ω–¥...")
                time.sleep(wait_time)
            else:
                return None  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å –ª–∏–º–∏—Ç–∞–º–∏, –≤—ã—Ö–æ–¥–∏–º

def update_prices_in_db():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ü–µ–Ω—ã –∞–∫—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏."""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute("SELECT id, ticker FROM stocks")
    stocks = cursor.fetchall()

    for stock_id, ticker in stocks:
        new_price = get_stock_price(ticker)
        if new_price is not None:
            cursor.execute("""
                UPDATE stocks 
                SET last_price = ?, updated_at = ? 
                WHERE id = ?
            """, (new_price, datetime.now(), stock_id))
            conn.commit()
        
        time.sleep(2)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

    conn.close()

def update_stock_prices():
    """–§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –∞–∫—Ü–∏–π –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥."""
    while True:
        update_prices_in_db()
        time.sleep(10)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ–ª–Ω—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏

def start_price_update_thread():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—Ç–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤."""
    thread = threading.Thread(target=update_stock_prices, daemon=True)
    thread.start()